// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Status {
  IN_PROGRESS
  PENDING
  COMPLETED
  NOT_STARTED
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  hashedPassword String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  Account        Account[]
  Project        Project[]

  @@map("user")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  token_type        String?
  refresh_token     String? @db.String
  access_token      String? @db.String
  id_token          String? @db.String
  scope             String?
  session_state     String?
  expires_at        Int?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @db.ObjectId

  @@unique([provider, providerAccountId])
  @@map("account")
}

model Task {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  Project   Project? @relation(fields: [projectId], references: [id])
  projectId String?  @db.ObjectId
}

model Project {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  userId      String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks       Task[]
  client      Client?   @relation(fields: [clientId], references: [id])
  clientId    String?   @db.ObjectId
  createdAt   DateTime  @default(now())
  updatedAt   DateTime?
  startAt     DateTime
  endAt       DateTime
  status      Status    @default(NOT_STARTED)
  description String
  budget      Int
}

model Client {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  phone     String?
  email     String?
  projects  Project[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
